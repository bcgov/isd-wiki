# nginx-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: isd-wiki-nginx-config
  labels:
    app.kubernetes.io/name: isd-wiki
    app.kubernetes.io/instance: isd-wiki
data:
  nginx.conf: |
    server {
      listen 8080;
      server_name isd-wiki;
      root /var/www/html;
      index index.php;

      # Redirect root to Main Page
      location = / {
          return 301 /wiki/Main_Page;
      }

      # Pretty URLs for articles
      location /wiki/ {
          rewrite ^/wiki/(.*)$ /w/index.php?title=$1&$args;
      }

      # MediaWiki entry points
      location ~ ^/w/(mw-config/)?(index|load|api|thumb|opensearch_desc|rest|img_auth)\.php$ {
          include fastcgi_params;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          fastcgi_pass php-fpm:9000;  # Replace with your actual PHP-FPM container name or socket
      }

      # General PHP handler (fallback)
      location ~ \.php$ {
          include fastcgi_params;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          fastcgi_pass php-fpm:9000;
      }

      # Static assets
      location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|wasm)$ {
          expires max;
          log_not_found off;
          access_log off;
          add_header Cache-Control "public";
      }

      # MediaWiki resources
      location ~ ^/w/resources/(assets|lib|src) {
          try_files $uri =404;
          add_header Cache-Control "public";
          expires 7d;
      }

      # Skins and extensions assets
      location ~ ^/w/(skins|extensions)/.+\.(css|js|gif|jpg|jpeg|png|svg|wasm|ttf|woff|woff2)$ {
          try_files $uri =404;
          add_header Cache-Control "public";
          expires 7d;
      }

      # Favicon
      location = /favicon.ico {
          alias /w/images/6/64/Favicon.ico;
          add_header Cache-Control "public";
          expires 7d;
      }

      # Images
      location /w/images {
          add_header X-Content-Type-Options "nosniff";
          types { text/plain html htm shtml phtml; }
      }

      location /w/images/deleted {
          deny all;
      }

      # REST API
      location /w/rest.php/ {
          try_files $uri $uri/ /w/rest.php?$query_string;
      }

      # robots.txt
      location = /robots.txt {
          access_log off;
          log_not_found off;
      }
    }
