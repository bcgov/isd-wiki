apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "isd-wiki.fullname" . }}
  labels:
    {{- include "isd-wiki.labels" . | nindent 4 }}
spec:
  {{- if not .Values.mediawiki.autoscaling.enabled }}
  replicas: {{ .Values.mediawiki.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "isd-wiki.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        # 1. Vault injector configuration
        vault.hashicorp.com/agent-inject: 'true'
        # set to 'true' if you are going to connect and query vault from your application
        vault.hashicorp.com/agent-inject-token: 'false'
        # this makes sure the secret vault will only change during pod restart
        vault.hashicorp.com/agent-pre-populate-only: 'true'
        # Must match cluster. Use one of: k8s-silver, k8s-gold, k8s-golddr, k8s-emerald
        vault.hashicorp.com/auth-path: auth/k8s-{{ .Values.global.cluster }}
        vault.hashicorp.com/namespace: platform-services
        # licenseplate-nonprod or licenseplate-prod are your options
        vault.hashicorp.com/role: {{ .Values.global.vault.role }}
        # - The value is the path in Vault where the secret is located.
        vault.hashicorp.com/agent-inject-secret-isd-db-user: {{ .Values.global.licenseplate }}-{{ .Values.global.vault.engine }}/{{ .Values.global.vault.secret }}
        # - The template Vault Agent should use for rendering a secret:
        vault.hashicorp.com/agent-inject-template-secrets: |
          {{`{{- with secret `}}"{{ .Values.global.licenseplate }}-{{ .Values.global.vault.engine }}/{{ .Values.global.vault.secret }}"{{` }}
          {{- range $k, $v := .Data.data }}
          {{ $k }}={{ $v }}{{ end -}}
          {{- end `}} }}
      {{- with .Values.mediawiki.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "isd-wiki.labels" . | nindent 8 }}
        {{- include "isd-wiki.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.mediawiki.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.global.serviceAccount.name }}
      securityContext:
        {{- toYaml .Values.mediawiki.podSecurityContext | nindent 8 }}
      initContainers:
       - name: copy-mediawiki-files
         image: "{{ .Values.mediawiki.image.repository }}:{{ .Values.mediawiki.image.tag }}"
         command: ["/bin/sh", "-c"]
         args:
          # The official MediaWiki image has the files in /var/www/html.
          # We copy them from that location into a different, temporary mount point for the volume.
          - "cp -r /var/www/html/. /copy-dest/"
         volumeMounts:
          - name: mediawiki-html-volume
            mountPath: /copy-dest

      containers:
       - name: nginx
         securityContext:
            {{- toYaml .Values.nginx.securityContext | nindent 12 }}
         image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag | default .Chart.AppVersion }}"
         imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
         resources:
          {{- toYaml .Values.nginx.resources | nindent 12 }}
         volumeMounts:
          - name: empty-dir
            mountPath: /tmp
            subPath: tmp-dir
          - name: nginx-run
            mountPath: /var/run
          - name: nginx-config
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: nginx.conf
          # - name: certificate
          #   mountPath: /certs
          - name: nginx-cache
            mountPath: /var/cache/nginx
          # The NGINX server will read the PHP files from this shared volume
          - name: mediawiki-html-volume
            mountPath: /var/www/html
         env:
            - name: PHP_FPM_HOST
              value: localhost
            - name: PHP_FPM_PORT
              value: "9000"
         ports:
            - name: health-check
              containerPort: 80
              protocol: TCP
            - name: proxy-traffic
              containerPort: 443
              protocol: TCP
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8081
              protocol: TCP
         livenessProbe:
            httpGet:
              path: /health
              port: health-check
            initialDelaySeconds: 30
            periodSeconds: 10
         readinessProbe:
            httpGet:
              path: /health
              port: health-check
            initialDelaySeconds: 30
            periodSeconds: 10

        # The main MediaWiki PHP-FPM container
       - name: mediawiki
         securityContext:
           {{- toYaml .Values.mediawiki.securityContext | nindent 16 }}
         image: "{{ .Values.mediawiki.image.repository }}:{{ .Values.mediawiki.image.tag }}"
         imagePullPolicy: {{ .Values.mediawiki.image.pullPolicy }}
         ports:
          - name: fpm
            containerPort: 9000
            protocol: TCP
         #  command: ["/usr/local/sbin/php-fpm", "-F"]
         args: ["php-fpm", "-F"]
         env:
            - name: MEDIAWIKI_DB_TYPE
              value: {{ .Values.mediawiki.database.type | quote }}
            - name: MEDIAWIKI_DB_HOST
              value: {{ .Values.mediawiki.database.host | default (printf "%s-mysql" (include "isd-wiki.fullname" .)) | quote }}
            - name: MEDIAWIKI_DB_PORT
              value: {{ .Values.mediawiki.database.port | default 5432 | quote }}
            - name: MEDIAWIKI_DB_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mediawiki.database.secretName | quote }}
                  key: app-db-name
            - name: MEDIAWIKI_DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mediawiki.database.secretName | quote }}
                  key: app-db-username
            - name: MEDIAWIKI_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mediawiki.database.secretName | quote }}
                  key: app-db-password
            - name: MEDIAWIKI_SITE_NAME
              value: {{ .Values.mediawiki.siteName | quote }}
            - name: MEDIAWIKI_SITE_SERVER
              value: {{ .Values.mediawiki.siteServer | quote }}
            - name: MEDIAWIKI_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "isd-wiki.fullname" . }}-credentials
                  key: admin-user
            - name: MEDIAWIKI_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "isd-wiki.fullname" . }}-credentials
                  key: admin-password
         volumeMounts:
            - name: tmp-dir
              mountPath: /tmp
            - name: mediawiki-html-volume
              mountPath: /var/www/html
            - name: mediawiki-data
              mountPath: /var/www/data
         resources:
            {{- toYaml .Values.mediawiki.resources | nindent 16 }}
         readinessProbe:
            tcpSocket:
              port: 9000
            initialDelaySeconds: 10
            periodSeconds: 5
         livenessProbe:
            tcpSocket:
              port: 9000
            initialDelaySeconds: 30
            periodSeconds: 10

      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: tmp-dir
          emptyDir: {}
        - name: nginx-run
          emptyDir: {}
        # - name: certificate
        #   secret:
        #     secretName: proxy-nginx-tls
        #     items:
        #       - key: tls.crt
        #         path: server.crt
        #       - key: tls.key
        #         path: server.key
        #     defaultMode: 420
        - name: nginx-config
          configMap:
            name: {{ include "isd-wiki.fullname" . }}-nginx-config
            # defaultMode: 0644
        - name: nginx-cache
          emptyDir: {}
        - name: mediawiki-data
          persistentVolumeClaim:
            claimName: {{ include "isd-wiki.fullname" . }}-data
        - name: mediawiki-html-volume
          persistentVolumeClaim:
            claimName: {{ include "isd-wiki.fullname" . }}-html
      {{- with .Values.mediawiki.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mediawiki.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mediawiki.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}